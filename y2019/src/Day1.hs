module Day1 where

input :: String
input = "50062\n118298\n106698\n59751\n59461\n144411\n52783\n118293\n148025\n54354\n95296\n68478\n80105\n76390\n75768\n89311\n117129\n127515\n131531\n127565\n77249\n91806\n123811\n123508\n127263\n61076\n82153\n122561\n89117\n116790\n146530\n66706\n56549\n112264\n139250\n87331\n144022\n142052\n125519\n89797\n85148\n125388\n67458\n116066\n74346\n148163\n55477\n146163\n99308\n95653\n122175\n92021\n146532\n109749\n136711\n102321\n114221\n140294\n116718\n127416\n130402\n52239\n125181\n146410\n126339\n147221\n81706\n80131\n140909\n59935\n71878\n64434\n148450\n73037\n90890\n137135\n85992\n137381\n84604\n62524\n64133\n92067\n124269\n132039\n145257\n107367\n62143\n105000\n62124\n55929\n101489\n94728\n85982\n88358\n83275\n132648\n75688\n109263\n146400\n114701"

countFuel :: Int -> Int
countFuel = subtract 2 . flip quot 3

solution1 :: Int
solution1 = sum $ map (countFuel . read) $ lines input

solution2 :: Int
solution2 = sum $ map (sum . takeWhile (>0) . tail . iterate countFuel . read) $ lines input